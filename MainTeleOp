package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DcMotorSimple;
import com.qualcomm.robotcore.hardware.DigitalChannel;
import com.qualcomm.robotcore.hardware.Servo;
import com.qualcomm.robotcore.util.Range;

import junit.framework.Test;


@TeleOp(name = "MainTeleOp")
public class MainTeleOp extends LinearOpMode {
    public float x, y, z, w, pwr;
    private DcMotor BR;
    private DcMotor BL;
    private DcMotor FL;
    private DcMotor FR;
    private DcMotor IR;
    private DcMotor IL;
    private DcMotor PulleyL;
    private DcMotor PulleyR;
    private Servo StoneR;
    private Servo OuttakeR;
    private Servo OuttakeL;
    private Servo StoneL;
    private Servo FoundationServoL;
    private Servo FoundationServoR;
    private Servo DepositServo;
    private DigitalChannel TouchR;
    private DigitalChannel TouchL;

    //private Servo FoundationServo;


    @Override
    public void runOpMode() throws InterruptedException {
        BR = hardwareMap.dcMotor.get("BR");
        BL = hardwareMap.dcMotor.get("BL");
        FL = hardwareMap.dcMotor.get("FL");
        FR = hardwareMap.dcMotor.get("FR");
        IR = hardwareMap.dcMotor.get("IR");
        IL = hardwareMap.dcMotor.get("IL");
        PulleyL = hardwareMap.dcMotor.get("PulleyL");
        PulleyR = hardwareMap.dcMotor.get("PulleyR");
        FoundationServoR = hardwareMap.servo.get("FoundationServoR");
        FoundationServoL = hardwareMap.servo.get("FoundationServoL");
        OuttakeL = hardwareMap.servo.get("OuttakeL");
        OuttakeR = hardwareMap.servo.get("OuttakeR");
        TouchR = hardwareMap.digitalChannel.get("TouchR");
        TouchL = hardwareMap.digitalChannel.get("TouchL");


        StoneR = hardwareMap.servo.get("StoneR");
        StoneL = hardwareMap.servo.get("StoneL");
        DepositServo = hardwareMap.servo.get("DepositServo");

        //FoundationServo = hardwareMap.servo.get("FoundationServo");


        FR.setDirection(DcMotor.Direction.REVERSE);
        BR.setDirection(DcMotor.Direction.REVERSE);
        IL.setDirection(DcMotor.Direction.REVERSE);
        PulleyL.setDirection(DcMotor.Direction.REVERSE);


        FR.setPower(Range.clip(pwr - x + z, -1, 1));
        BL.setPower(Range.clip(pwr - x - z, -1, 1));
        FL.setPower(Range.clip(pwr + x - z, -1, 1));
        BR.setPower(Range.clip(pwr + x + z, -1, 1));
        IL.setPower(Range.clip(pwr + x + z, -.5, .5));
        IR.setPower(Range.clip(pwr + x + z, -.5, .5));

        waitForStart();
        while (opModeIsActive()) {
// moving the robot forward and backward


            if (gamepad2.dpad_down) {
                StoneR.setPosition(0);
            }

            if (gamepad2.dpad_up) {

                StoneR.setPosition(0.35);
            }

            if (gamepad2.dpad_left) {
                StoneL.setPosition(0);
            }
            //      if(gamepad2.dpad_right){

            //     //StoneL.setPosition(.9);
            //   }


          /*  PulleyL.setPower(Range.clip(gamepad2.right_stick_y, -.5, .5));
            PulleyR.setPower(Range.clip(gamepad2.right_stick_y, -.5, .5));
*/

            if (gamepad1.x) {
                FoundationServoL.setPosition(1);
               FoundationServoR.setPosition(0);
            }
            if (gamepad1.y) {
                 FoundationServoL.setPosition(0);
               FoundationServoR.setPosition(1);
            }


            FL.setPower(-gamepad1.left_stick_y);
            FR.setPower(-gamepad1.left_stick_y);
            BL.setPower(-gamepad1.left_stick_y);
            BR.setPower(-gamepad1.left_stick_y);
// strafing
            FL.setPower(gamepad1.left_stick_x);
            FR.setPower(gamepad1.left_stick_x);
            BL.setPower(-gamepad1.left_stick_x);
            BR.setPower(-gamepad1.left_stick_x);
//turning on the right joystick
            FL.setPower(gamepad1.right_stick_x);
            FR.setPower(-gamepad1.right_stick_x);
            BL.setPower(gamepad1.right_stick_x);
            BR.setPower(-gamepad1.right_stick_x);


            //intake

            IR.setPower(Range.clip(-gamepad2.left_stick_y, -.8, .8));
            IL.setPower(Range.clip(-gamepad2.left_stick_y, -.8, .8));


            //outtake 

            //   if(gamepad2.y){
            //       OuttakeL.setPosition(0);
            //       OuttakeR.setPosition(1);

            if (gamepad2.x) {
                OuttakeL.setPosition(.65);
                OuttakeR.setPosition(0);
            }
            if (gamepad2.y) {
                OuttakeL.setPosition(0);
                OuttakeR.setPosition(1);
            }
            if (gamepad2.a) {
                DepositServo.setPosition(1);
            }

            if (gamepad2.b) {
                DepositServo.setPosition(.45);

            }

            if ((TouchR.getState() == true)) {
                PulleyR.setDirection(DcMotor.Direction.FORWARD);
                PulleyR.setPower(gamepad2.right_stick_y);
                PulleyL.setDirection(DcMotor.Direction.FORWARD);
                PulleyL.setPower(-gamepad2.right_stick_y);

                //PULLEY.setPower(0);
                telemetry.addData("Not Pressed", TouchR.getState());
                telemetry.update();
            } else {
             //   telemetry.addData("Pressed", TouchR.getState());
                PulleyR.setPower(-.5);
                PulleyL.setPower(.5);
                telemetry.addData("Not Pressed", TouchR.getState());
                telemetry.update();


            }
            if ((TouchL.getState() == true)) {
                PulleyR.setDirection(DcMotor.Direction.FORWARD);
                PulleyR.setPower(gamepad2.right_stick_y);
                PulleyL.setDirection(DcMotor.Direction.FORWARD);
                PulleyL.setPower(-gamepad2.right_stick_y);

                //PULLEY.setPower(0);
                telemetry.addData("Not Pressed", TouchL.getState());
                telemetry.update();
            } else {
             //   telemetry.addData("Pressed", TouchR.getState());
                PulleyR.setPower(-.5);
                PulleyL.setPower(.5);
                telemetry.addData("Not Pressed", TouchL.getState());
                telemetry.update();


            }


        }


//            FL.setPower(-gamepad1.left_stick_x);
//            FR.setPower(gamepad1.right_stick_x);
//            BL.setPower(gamepad1.right_stick_x);
//            BR.setPower(-gamepad1.left_stick_x);
//            if(gamepad1.dpad_left){
//                FL.setPower(-1);
//                FR.setPower(1);
//                BL.setPower(1);
//                BR.setPower(-1);
//            }
//            if(gamepad1.dpad_right){
//                FL.setPower(1);
//                FR.setPower(-1);
//                BL.setPower(-1);
//                BR.setPower(1);
//            }


    }

}








